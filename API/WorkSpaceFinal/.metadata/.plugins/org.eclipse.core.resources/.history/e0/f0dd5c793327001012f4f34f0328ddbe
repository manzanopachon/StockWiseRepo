package com.dam.restaurante.controller;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.dam.restaurante.dto.CodigoVerificacionRequest;
import com.dam.restaurante.dto.EmpleadoDTO;
import com.dam.restaurante.dto.LoginRequest;
import com.dam.restaurante.model.Empleado;
import com.dam.restaurante.service.EmpleadoService;

@RestController
@RequestMapping("/api/auth")
public class AuthController {

    @Autowired
    private EmpleadoService empleadoService;

    @GetMapping
    public List<Empleado> obtenerTodos() {
        return empleadoService.obtenerTodos();
    }
    // Endpoint para registrar un empleado
    @PostMapping("/registro")
    public EmpleadoDTO registrarEmpleado(@RequestBody Empleado empleado) {
        Empleado nuevoEmpleado = empleadoService.registrarEmpleado(empleado);
        return new EmpleadoDTO(nuevoEmpleado);
    }

    // Endpoint para verificar el código de verificación
    @PostMapping("/verificar/{id}")
    public ResponseEntity<EmpleadoDTO> verificarCodigo(
        @PathVariable Long id,
        @RequestParam String codigo
    ) {
        Empleado empleado = empleadoService.verificarCodigo(id, codigo);
        return ResponseEntity.ok(new EmpleadoDTO(empleado));
    }


    // Endpoint para iniciar sesión
    @PostMapping("/login")
    public ResponseEntity<?> login(@RequestBody LoginRequest loginRequest) {
        try {
            Empleado empleado = empleadoService.iniciarSesion(
                    loginRequest.getCorreo(),
                    loginRequest.getContraseña());

            if (!empleado.getValidado()) {
                return ResponseEntity.ok(Map.of(
                        "mensaje", "Primera vez. Introduce el código de verificación",
                        "requiereCodigo", true,
                        "empleadoId", empleado.getId()
                ));
            }

            return ResponseEntity.ok(new EmpleadoDTO(empleado));

            
        } catch (RuntimeException e) {
            return ResponseEntity.status(401).body(Map.of(
                    "error", e.getMessage()
            ));
        }
    }

    @PostMapping("/verificar-codigo")
    public ResponseEntity<?> verificarCodigo(@RequestBody CodigoVerificacionRequest request) {
        try {
            Empleado empleado = empleadoService.verificarCodigo(
                    request.getEmpleadoId(),
                    request.getCodigo());

            return ResponseEntity.ok(Map.of(
                    "mensaje", "Código correcto. Bienvenido.",
                    "validado", true
            ));
        } catch (RuntimeException e) {
            return ResponseEntity.status(401).body(Map.of(
                    "error", e.getMessage()
            ));
        }
    }

}